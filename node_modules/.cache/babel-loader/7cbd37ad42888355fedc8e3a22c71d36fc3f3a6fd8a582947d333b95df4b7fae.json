{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobri\\\\Desktop\\\\ALL THINGS CODING\\\\Project Portfolio\\\\weather-app\\\\src\\\\components\\\\ForecastPage.js\",\n  _s = $RefreshSig$();\n// ForecastPage.js\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation hook\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    forecastData\n  } = location.state; // Get forecastData from location state\n  const navigate = useNavigate();\n\n  // Define formatDateTime function\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const options = {\n      weekday: 'long',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      year: 'numeric',\n      timeZone: forecastData.timezone\n    };\n    return date.toLocaleString('en-US', options);\n  };\n  const navigateGoBack = () => {\n    navigate(-1); // Go back to the previous page\n  };\n\n  // Render forecast data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: navigateGoBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), forecastData.daily.time.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-card\",\n        onClick: () => {\n          // Handle click event for the selected day\n          console.log('Clicked on day:', formatDateTime(time));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: formatDateTime(time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max: \", forecastData.daily.temperature_2m_max[index], \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 70\n          }, this), \"Min: \", forecastData.daily.temperature_2m_min[index], \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No forecast data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastPage, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ForecastPage;\nexport default ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","FontAwesomeIcon","faArrowLeft","jsxDEV","_jsxDEV","ForecastPage","_s","location","forecastData","state","navigate","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","timezone","toLocaleString","navigateGoBack","children","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","daily","time","temperature_2m_max","temperature_2m_min","style","display","flexDirection","flexWrap","map","index","className","console","log","_c","$RefreshReg$"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/ForecastPage.js"],"sourcesContent":["// ForecastPage.js\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation hook\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForecastPage = () => {\r\n  const location = useLocation();\r\n  const { forecastData } = location.state; // Get forecastData from location state\r\n  const navigate = useNavigate();\r\n\r\n  // Define formatDateTime function\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'long',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: forecastData.timezone,\r\n    };\r\n    return date.toLocaleString('en-US', options);\r\n  };\r\n\r\n  const navigateGoBack = () => {\r\n    navigate(-1); // Go back to the previous page\r\n  };\r\n\r\n  // Render forecast data\r\n  return (\r\n    <div>\r\n      <FontAwesomeIcon icon={faArrowLeft} onClick={navigateGoBack} />\r\n      {/* Render forecast data here */}\r\n      {forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? (\r\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n          <h2>Daily Forecast</h2>\r\n          {forecastData.daily.time.map((time, index) => (\r\n            <div className=\"forecast-card\"\r\n              key={index}\r\n              onClick={() => {\r\n                // Handle click event for the selected day\r\n                console.log('Clicked on day:', formatDateTime(time));\r\n              }}\r\n            >\r\n              <h3>{formatDateTime(time)}</h3>\r\n              <p>\r\n                Max: {forecastData.daily.temperature_2m_max[index]}°C<br />\r\n                Min: {forecastData.daily.temperature_2m_min[index]}°C\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>No forecast data available</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}