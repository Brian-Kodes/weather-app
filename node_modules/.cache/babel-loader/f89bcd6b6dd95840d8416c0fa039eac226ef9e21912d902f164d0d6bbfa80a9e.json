{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobri\\\\Desktop\\\\ALL THINGS CODING\\\\Project Portfolio\\\\weather-app\\\\src\\\\components\\\\ForecastPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faTemperatureHigh, faTemperatureLow } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    forecastData\n  } = location.state;\n  const navigate = useNavigate();\n  const [expandedCard, setExpandedCard] = useState(null);\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const options = {\n      weekday: 'short',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      year: 'numeric',\n      timeZone: forecastData.timezone\n    };\n    const formattedDate = date.toLocaleString('en-US', options);\n    const [dayMonth, time] = formattedDate.split(',');\n    return {\n      dayMonth,\n      time\n    };\n  };\n  const navigateGoBack = () => {\n    navigate(-1);\n  };\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const handleCardClick = index => {\n    setExpandedCard(expandedCard === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      style: {\n        backgroundColor: 'rgba(255, 255, 255, 0.7)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        className: \"back-btn\",\n        onClick: navigateGoBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? forecastData.daily.time.map((time, index) => {\n        const {\n          dayMonth,\n          time: formattedTime\n        } = formatDateTime(time);\n        const isHovered = hoveredCard === index;\n        const isExpanded = expandedCard === index;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `forecast-card ${isExpanded ? 'expanded' : ''}`,\n          onMouseEnter: () => setHoveredCard(index),\n          onMouseLeave: () => setHoveredCard(null),\n          onClick: () => handleCardClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"day-month\",\n            children: dayMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), isHovered && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtext\",\n              children: formattedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 69\n            }, this), \"Max: \", forecastData.daily.temperature_2m_max[index], \"\\xB0C \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTemperatureHigh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 75\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 119\n            }, this), \"Min: \", forecastData.daily.temperature_2m_min[index], \"\\xB0C \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTemperatureLow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expanded-details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No forecast data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastPage, \"Q3cjWNghS2NOw7eLOi978HKUlXM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ForecastPage;\nexport default ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","FontAwesomeIcon","faArrowLeft","faTemperatureHigh","faTemperatureLow","jsxDEV","_jsxDEV","ForecastPage","_s","location","forecastData","state","navigate","expandedCard","setExpandedCard","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","timezone","formattedDate","toLocaleString","dayMonth","time","split","navigateGoBack","hoveredCard","setHoveredCard","handleCardClick","index","className","children","style","backgroundColor","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","daily","temperature_2m_max","temperature_2m_min","map","formattedTime","isHovered","isExpanded","onMouseEnter","onMouseLeave","id","_c","$RefreshReg$"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/ForecastPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faTemperatureHigh, faTemperatureLow } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForecastPage = () => {\r\n  const location = useLocation();\r\n  const { forecastData } = location.state;\r\n  const navigate = useNavigate();\r\n  const [expandedCard, setExpandedCard] = useState(null);\r\n\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'short',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: forecastData.timezone,\r\n    };\r\n    const formattedDate = date.toLocaleString('en-US', options);\r\n    const [dayMonth, time] = formattedDate.split(',');\r\n    return { dayMonth, time };\r\n  };\r\n\r\n  const navigateGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n\r\n  const handleCardClick = (index) => {\r\n    setExpandedCard(expandedCard === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"forecast-page\">\r\n      <div className=\"forecast-container\" style={{ backgroundColor: 'rgba(255, 255, 255, 0.7)' }}>\r\n      <FontAwesomeIcon icon={faArrowLeft} className=\"back-btn\" onClick={navigateGoBack} />\r\n        {forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? (\r\n          forecastData.daily.time.map((time, index) => {\r\n            const { dayMonth, time: formattedTime } = formatDateTime(time);\r\n            const isHovered = hoveredCard === index;\r\n            const isExpanded = expandedCard === index;\r\n            return (\r\n              <div\r\n                className={`forecast-card ${isExpanded ? 'expanded' : ''}`}\r\n                key={index}\r\n                onMouseEnter={() => setHoveredCard(index)}\r\n                onMouseLeave={() => setHoveredCard(null)}\r\n                onClick={() => handleCardClick(index)}\r\n              >\r\n                <h3 id='day-month'>{dayMonth}</h3>\r\n                {isHovered &&(\r\n                  <p>\r\n                    <span className=\"subtext\">{formattedTime}</span><br />\r\n                    Max: {forecastData.daily.temperature_2m_max[index]}°C <FontAwesomeIcon icon={faTemperatureHigh} /><br />\r\n                    Min: {forecastData.daily.temperature_2m_min[index]}°C <FontAwesomeIcon icon={faTemperatureLow} />\r\n                  </p> )}\r\n                  {isExpanded && (\r\n                    <div className=\"expanded-details\">\r\n                      {/* Add additional forecast information here */}\r\n                      {/* For example: Precipitation, Chance of Snowfall, etc. */}\r\n                    </div>\r\n                  )}\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>No forecast data available</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}