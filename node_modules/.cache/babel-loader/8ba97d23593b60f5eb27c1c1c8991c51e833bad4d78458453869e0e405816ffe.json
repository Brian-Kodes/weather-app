{"ast":null,"code":"import React,{useState}from'react';import LocationForm from'./LocationForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherApp=()=>{const[weatherData,setWeatherData]=useState(null);const handleSubmitLocation=async location=>{try{const response=await fetch(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(encodeURIComponent(location),\"&count=1&language=en&format=json\"));const data=await response.json();if(data&&data.results&&data.results.length>0){const{latitude,longitude,timezone}=data.results[0];const forecastResponse=await fetch(\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(latitude,\"&longitude=\").concat(longitude,\"&hourly=&daily=temperature_2m_max,temperature_2m_min&timezone=\").concat(timezone));const forecastData=await forecastResponse.json();setWeatherData(forecastData);}else{throw new Error('Location not found');}}catch(error){console.error('Error fetching weather data:',error);}};const formatDateTime=dateTime=>{const date=new Date(dateTime);const options={weekday:'long',month:'short',day:'numeric',hour:'numeric',minute:'numeric',hour12:true,year:'numeric',timeZone:weatherData.timezone};const formattedDate=date.toLocaleDateString('en-US',options);const time=date.toLocaleTimeString('en-US',options);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'larger'},children:formattedDate.split(',')[0]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"sup\",{children:time})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather Forecast\"}),/*#__PURE__*/_jsx(LocationForm,{onSubmit:handleSubmitLocation}),weatherData&&weatherData.daily&&weatherData.daily.time&&weatherData.daily.temperature_2m_max&&weatherData.daily.temperature_2m_min?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Daily Forecast\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:weatherData.daily.time.map((time,index)=>/*#__PURE__*/_jsx(\"th\",{children:formatDateTime(time)},index))})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:weatherData.daily.temperature_2m_max.map((maxTemp,index)=>/*#__PURE__*/_jsxs(\"td\",{children:[\"Max: \",maxTemp,\"\\xB0C\",/*#__PURE__*/_jsx(\"br\",{}),\"Min: \",weatherData.daily.temperature_2m_min[index],\"\\xB0C\"]},index))})})]})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No forecast data available\"})]});};export default WeatherApp;","map":{"version":3,"names":["React","useState","LocationForm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","WeatherApp","weatherData","setWeatherData","handleSubmitLocation","location","response","fetch","concat","encodeURIComponent","data","json","results","length","latitude","longitude","timezone","forecastResponse","forecastData","Error","error","console","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","formattedDate","toLocaleDateString","time","toLocaleTimeString","children","style","fontSize","split","onSubmit","daily","temperature_2m_max","temperature_2m_min","map","index","maxTemp"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LocationForm from './LocationForm';\r\n\r\nconst WeatherApp = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  const handleSubmitLocation = async (location) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(location)}&count=1&language=en&format=json`\r\n      );\r\n      const data = await response.json();\r\n      if (data && data.results && data.results.length > 0) {\r\n        const { latitude, longitude, timezone } = data.results[0];\r\n        const forecastResponse = await fetch(\r\n          `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=&daily=temperature_2m_max,temperature_2m_min&timezone=${timezone}`\r\n        );\r\n        const forecastData = await forecastResponse.json();\r\n        setWeatherData(forecastData);\r\n      } else {\r\n        throw new Error('Location not found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'long',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: weatherData.timezone,\r\n    };\r\n    const formattedDate = date.toLocaleDateString('en-US', options);\r\n    const time = date.toLocaleTimeString('en-US', options);\r\n    return (\r\n      <>\r\n        <span style={{ fontSize: 'larger' }}>{formattedDate.split(',')[0]}</span>\r\n        <br />\r\n        <sup>{time}</sup>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weather Forecast</h1>\r\n      <LocationForm onSubmit={handleSubmitLocation} />\r\n      {weatherData && weatherData.daily && weatherData.daily.time && weatherData.daily.temperature_2m_max && weatherData.daily.temperature_2m_min ? (\r\n        <div>\r\n          <h2>Daily Forecast</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {weatherData.daily.time.map((time, index) => (\r\n                  <th key={index}>{formatDateTime(time)}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                {weatherData.daily.temperature_2m_max.map((maxTemp, index) => (\r\n                  <td key={index}>\r\n                    Max: {maxTemp}°C\r\n                    <br />\r\n                    Min: {weatherData.daily.temperature_2m_min[index]}°C\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>No forecast data available</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}