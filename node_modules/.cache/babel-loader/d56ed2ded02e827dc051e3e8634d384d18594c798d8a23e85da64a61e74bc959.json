{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobri\\\\Desktop\\\\ALL THINGS CODING\\\\Project Portfolio\\\\weather-app\\\\src\\\\components\\\\ForecastPage.js\",\n  _s = $RefreshSig$();\n// ForecastPage.js\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    forecastData\n  } = location.state; // Get forecastData from location state\n  const navigate = useNavigate();\n\n  // Define formatDateTime function\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const options = {\n      weekday: 'long',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      year: 'numeric',\n      timeZone: forecastData.timezone\n    };\n    return date.toLocaleString('en-US', options);\n  };\n  const navigateGoBack = () => {\n    navigate(-1); // Go back to the previous page\n  };\n\n  // Render forecast data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forecast Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: navigateGoBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: forecastData.daily.time.map((time, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: formatDateTime(time)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: forecastData.daily.temperature_2m_max.map((maxTemp, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Max: \", maxTemp, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), \"Min: \", forecastData.daily.temperature_2m_min[index], \"\\xB0C\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No forecast data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastPage, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ForecastPage;\nexport default ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","jsxDEV","_jsxDEV","ForecastPage","_s","location","forecastData","state","navigate","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","timezone","toLocaleString","navigateGoBack","children","fileName","_jsxFileName","lineNumber","columnNumber","FontAwesomeIcon","icon","faArrowLeft","onClick","daily","time","temperature_2m_max","temperature_2m_min","map","index","maxTemp","_c","$RefreshReg$"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/ForecastPage.js"],"sourcesContent":["// ForecastPage.js\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation hook\r\n\r\nconst ForecastPage = () => {\r\n  const location = useLocation();\r\n  const { forecastData } = location.state; // Get forecastData from location state\r\n  const navigate = useNavigate();\r\n\r\n  // Define formatDateTime function\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'long',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: forecastData.timezone,\r\n    };\r\n    return date.toLocaleString('en-US', options);\r\n  };\r\n\r\n  const navigateGoBack = () => {\r\n    navigate(-1); // Go back to the previous page\r\n  };\r\n\r\n  // Render forecast data\r\n  return (\r\n    <div>\r\n      <h1>Forecast Page</h1>\r\n      <FontAwesomeIcon icon = {faArrowLeft} onClick={navigateGoBack} />\r\n      {/* Render forecast data here */}\r\n      {forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? (\r\n        <div>\r\n          <h2>Daily Forecast</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {forecastData.daily.time.map((time, index) => (\r\n                  <th key={index}>{formatDateTime(time)}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                {forecastData.daily.temperature_2m_max.map((maxTemp, index) => (\r\n                  <td key={index}>\r\n                    Max: {maxTemp}°C\r\n                    <br />\r\n                    Min: {forecastData.daily.temperature_2m_min[index]}°C\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>No forecast data available</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}