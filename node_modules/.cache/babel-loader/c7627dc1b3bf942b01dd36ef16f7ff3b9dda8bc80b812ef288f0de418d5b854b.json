{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobri\\\\Desktop\\\\ALL THINGS CODING\\\\Project Portfolio\\\\weather-app\\\\src\\\\components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LocationForm from './LocationForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const handleSubmitLocation = async location => {\n    try {\n      const response = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(location)}&count=1&language=en&format=json`);\n      const data = await response.json();\n      if (data && data.results && data.results.length > 0) {\n        const {\n          latitude,\n          longitude,\n          timezone\n        } = data.results[0];\n        const forecastResponse = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=&daily=temperature_2m_max,temperature_2m_min&timezone=${timezone}`);\n        const forecastData = await forecastResponse.json();\n        setWeatherData(forecastData);\n      } else {\n        throw new Error('Location not found');\n      }\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const options = {\n      weekday: 'long',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      year: 'numeric',\n      timeZone: weatherData.timezone\n    };\n    const formattedDate = date.toLocaleDateString('en-US', options);\n    const time = date.toLocaleTimeString('en-US', options);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 'larger'\n        },\n        children: formattedDate.split(',')[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-heading\",\n      children: [\"Weather \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"forecast\",\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationForm, {\n      onSubmit: handleSubmitLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), weatherData && weatherData.daily && weatherData.daily.time && weatherData.daily.temperature_2m_max && weatherData.daily.temperature_2m_min ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weatherData.daily.time.map((time, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: formatDateTime(time)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weatherData.daily.temperature_2m_max.map((maxTemp, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Max: \", maxTemp, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), \"Min: \", weatherData.daily.temperature_2m_min[index], \"\\xB0C\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"bz3WTkv9WK5s51p29VvW+nOlOFM=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","LocationForm","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","weatherData","setWeatherData","handleSubmitLocation","location","response","fetch","encodeURIComponent","data","json","results","length","latitude","longitude","timezone","forecastResponse","forecastData","Error","error","console","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","formattedDate","toLocaleDateString","time","toLocaleTimeString","children","style","fontSize","split","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","daily","temperature_2m_max","temperature_2m_min","map","index","maxTemp","_c","$RefreshReg$"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LocationForm from './LocationForm';\r\n\r\nconst WeatherApp = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  const handleSubmitLocation = async (location) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(location)}&count=1&language=en&format=json`\r\n      );\r\n      const data = await response.json();\r\n      if (data && data.results && data.results.length > 0) {\r\n        const { latitude, longitude, timezone } = data.results[0];\r\n        const forecastResponse = await fetch(\r\n          `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=&daily=temperature_2m_max,temperature_2m_min&timezone=${timezone}`\r\n        );\r\n        const forecastData = await forecastResponse.json();\r\n        setWeatherData(forecastData);\r\n      } else {\r\n        throw new Error('Location not found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'long',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: weatherData.timezone,\r\n    };\r\n    const formattedDate = date.toLocaleDateString('en-US', options);\r\n    const time = date.toLocaleTimeString('en-US', options);\r\n    return (\r\n      <>\r\n        <span style={{ fontSize: 'larger' }}>{formattedDate.split(',')[0]}</span>\r\n        <br />\r\n        <sup>{time}</sup>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"main-heading\">Weather <span className=\"forecast\">Forecast</span></h1>\r\n      <LocationForm onSubmit={handleSubmitLocation} />\r\n      {weatherData && weatherData.daily && weatherData.daily.time && weatherData.daily.temperature_2m_max && weatherData.daily.temperature_2m_min ? (\r\n        <div>\r\n          <h2>Daily Forecast</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {weatherData.daily.time.map((time, index) => (\r\n                  <th key={index}>{formatDateTime(time)}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                {weatherData.daily.temperature_2m_max.map((maxTemp, index) => (\r\n                  <td key={index}>\r\n                    Max: {maxTemp}°C\r\n                    <br />\r\n                    Min: {weatherData.daily.temperature_2m_min[index]}°C\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}