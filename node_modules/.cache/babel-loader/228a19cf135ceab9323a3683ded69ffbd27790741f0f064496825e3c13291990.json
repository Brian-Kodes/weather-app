{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kobri\\\\Desktop\\\\ALL THINGS CODING\\\\Project Portfolio\\\\weather-app\\\\src\\\\components\\\\ForecastPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    forecastData\n  } = location.state;\n  const navigate = useNavigate();\n  const formatDateTime = dateTime => {\n    const date = new Date(dateTime);\n    const options = {\n      weekday: 'short',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      year: 'numeric',\n      timeZone: forecastData.timezone\n    };\n    const formattedDate = date.toLocaleString('en-US', options);\n    const [dayMonth, time] = formattedDate.split(',');\n    return {\n      dayMonth,\n      time\n    };\n  };\n  const navigateGoBack = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-page\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: navigateGoBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? forecastData.daily.time.map((time, index) => {\n        const {\n          dayMonth,\n          time: formattedTime\n        } = formatDateTime(time);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"day-month\",\n            children: dayMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtext\",\n              children: formattedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 67\n            }, this), \"Max: \", forecastData.daily.temperature_2m_max[index], \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 72\n            }, this), \"Min: \", forecastData.daily.temperature_2m_min[index], \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No forecast data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastPage, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ForecastPage;\nexport default ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","FontAwesomeIcon","faArrowLeft","jsxDEV","_jsxDEV","ForecastPage","_s","location","forecastData","state","navigate","formatDateTime","dateTime","date","Date","options","weekday","month","day","hour","minute","hour12","year","timeZone","timezone","formattedDate","toLocaleString","dayMonth","time","split","navigateGoBack","className","children","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","daily","temperature_2m_max","temperature_2m_min","map","index","formattedTime","id","_c","$RefreshReg$"],"sources":["C:/Users/kobri/Desktop/ALL THINGS CODING/Project Portfolio/weather-app/src/components/ForecastPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,  } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForecastPage = () => {\r\n  const location = useLocation();\r\n  const { forecastData } = location.state;\r\n  const navigate = useNavigate();\r\n\r\n  const formatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const options = {\r\n      weekday: 'short',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n      year: 'numeric',\r\n      timeZone: forecastData.timezone,\r\n    };\r\n    const formattedDate = date.toLocaleString('en-US', options);\r\n    const [dayMonth, time] = formattedDate.split(',');\r\n    return { dayMonth, time };\r\n  };\r\n\r\n  const navigateGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"forecast-page\">\r\n      <FontAwesomeIcon icon={faArrowLeft} onClick={navigateGoBack} />\r\n      <div className=\"forecast-container\">\r\n        {forecastData && forecastData.daily && forecastData.daily.time && forecastData.daily.temperature_2m_max && forecastData.daily.temperature_2m_min ? (\r\n          forecastData.daily.time.map((time, index) => {\r\n            const { dayMonth, time: formattedTime } = formatDateTime(time);\r\n            return (\r\n              <div className=\"forecast-card\" key={index}>\r\n                <h3 id='day-month'>{dayMonth}</h3>\r\n                <p>\r\n                  <span className=\"subtext\">{formattedTime}</span><br />\r\n                  Max: {forecastData.daily.temperature_2m_max[index]}°C<br />\r\n                  Min: {forecastData.daily.temperature_2m_min[index]}°C\r\n                </p>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>No forecast data available</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}